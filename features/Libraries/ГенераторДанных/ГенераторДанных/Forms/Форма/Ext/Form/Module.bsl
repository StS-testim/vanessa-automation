
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Automation
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Automation.
Перем КонтекстСохраняемый Экспорт;

// Делает отключение модуля
&НаКлиенте
Функция ОтключениеМодуля() Экспорт

	Ванесса = Неопределено;
	Контекст = Неопределено;
	КонтекстСохраняемый = Неопределено;

КонецФункции

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);
	
	// Генератор Фамилий
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯЗапоминаюСлучайнуюФамилиюВПеременную(Парам01)",
		"ЯЗапоминаюСлучайнуюФамилиюВПеременную",
		"И я запоминаю случайную фамилию в переменную ""ИмяПеременной""",
		"Рандомно генерирует (выбирает) фамилию из известных Vanessa" + Символы.ПС + 
			"Макет с фамилиями встроен в Vanessa, список доступных фамилий можно найти в макете обработки",
		"Инициатор данных.Генератор данных");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯЗапоминаюСлучайнуюМужскуюФамилиюВПеременную(Парам01)",
		"ЯЗапоминаюСлучайнуюМужскуюФамилиюВПеременную",
		"И я запоминаю случайную мужскую фамилию в переменную ""ИмяПеременной""",
		"Рандомно генерирует (выбирает) фамилию из известных Vanessa" + Символы.ПС + 
			"Макет с фамилиями встроен в Vanessa, список доступных фамилий можно найти в макете обработки",
		"Инициатор данных.Генератор данных");      
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯЗапоминаюСлучайнуюЖенскуюФамилиюВПеременную(Парам01)",
		"ЯЗапоминаюСлучайнуюЖенскуюФамилиюВПеременную",
		"И я запоминаю случайную женскую фамилию в переменную ""ИмяПеременной""",
		"Рандомно генерирует (выбирает) фамилию из известных Vanessa" + Символы.ПС + 
			"Макет с фамилиями встроен в Vanessa, список доступных фамилий можно найти в макете обработки",
		"Инициатор данных.Генератор данных");

	// Генератор Имен
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯЗапоминаюСлучайноеИмяВПеременную(Парам01)",
		"ЯЗапоминаюСлучайноеИмяВПеременную",
		"И я запоминаю случайное имя в переменную ""ИмяПеременной""",
		"Рандомно генерирует (выбирает) имя из известных Vanessa" + Символы.ПС + 
			"Макет с именами встроен в Vanessa, список доступных фамилий можно найти в макете обработки",
		"Инициатор данных.Генератор данных");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯЗапоминаюСлучайноеМужскоеИмяВПеременную(Парам01)",
		"ЯЗапоминаюСлучайноеМужскоеИмяВПеременную",
		"И я запоминаю случайное мужское имя в переменную ""ИмяПеременной""",
		"Рандомно генерирует (выбирает) имя из известных Vanessa" + Символы.ПС + 
			"Макет с именами встроен в Vanessa, список доступных фамилий можно найти в макете обработки",
		"Инициатор данных.Генератор данных");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯЗапоминаюСлучайноеЖенскоеИмяВПеременную(Парам01)",
		"ЯЗапоминаюСлучайноеЖенскоеИмяВПеременную",
		"И я запоминаю случайное женское имя в переменную ""ИмяПеременной""",
		"Рандомно генерирует (выбирает) имя из известных Vanessa" + Символы.ПС + 
			"Макет с именами встроен в Vanessa, список доступных фамилий можно найти в макете обработки",
		"Инициатор данных.Генератор данных");

	
	// Генератор ИНН
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯЗапоминаюСлучайныйИННФизическогоЛицаВПеременную(Парам01)",
		"ЯЗапоминаюСлучайныйИННФизическогоЛицаВПеременную",
		"И я запоминаю случайный ИНН физического лица в переменную ""ИмяПеременной""",
		"Рандомно генерирует ИНН для физического лица с расчетом контрольной суммы",
		"Инициатор данных.Генератор данных");

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯЗапоминаюСлучайныйИННЮридическогоЛицаВПеременную(Парам01)",
		"ЯЗапоминаюСлучайныйИННЮридическогоЛицаВПеременную",
		"И я запоминаю случайный ИНН юридического лица в переменную ""ИмяПеременной""",
		"Рандомно генерирует ИНН для юридического лица с расчетом контрольной суммы",
		"Инициатор данных.Генератор данных");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯЗапоминаюСлучайныйКППЮридическогоЛицаВПеременную(Парам01)",
		"ЯЗапоминаюСлучайныйКППЮридическогоЛицаВПеременную",
		"И я запоминаю случайный КПП юридического лица в переменную ""ИмяПеременной""",
		"Рандомно генерирует КПП для юридического лица",
		"Инициатор данных.Генератор данных");

	// Генератор СНИЛС
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯЗапоминаюСлучайныйСНИЛСВПеременную(Парам01)",
		"ЯЗапоминаюСлучайныйСНИЛСВПеременную",
		"И я запоминаю случайный СНИЛС в переменную ""ИмяПеременной""",
		"Рандомно генерирует СНИЛС с расчетом контрольной суммы",
		"Инициатор данных.Генератор данных");

	// Генератор Телефона
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯЗапоминаюСлучайныйНомерТелефонаВПеременную(Парам01)",
		"ЯЗапоминаюСлучайныйНомерТелефонаВПеременную",
		"И я запоминаю случайный номер телефона в переменную ""ИмяПеременной""",
		"Рандомно генерирует номер телефона, номер будет начинаться с 000, чтобы избежать генерации существующего номера.",
		"Инициатор данных.Генератор данных");

	// Генератор номенклатуры
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯЗапоминаюСлучайноеНаименованиеНоменклатурыВПеременную(Парам01)",
		"ЯЗапоминаюСлучайноеНаименованиеНоменклатурыВПеременную",
		"И я запоминаю случайное наименование номенклатуры в переменную ""ИмяПеременной""",
		"Рандомно генерирует(выбирает) наименование номенклатуры."+ Символы.ПС + 
			"Макет с именами встроен в Vanessa, список содержит наименования ТН ВЭД",
		"Инициатор данных.Генератор данных");    

	// Генератор Даты Рождения
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		"ЯЗапоминаюСлучайнуюДатуРожденияВПеременную(Парам01)",
		"ЯЗапоминаюСлучайнуюДатуРожденияВПеременную",
		"И я запоминаю случайную дату рождения в переменную ""ИмяПеременной""",
		"Рандомно генерирует дату рождения не более 90 лет назад.",
		"Инициатор данных.Генератор данных");    
	
	Возврат ВсеТесты;
	
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

&НаКлиенте
// Служебная функция для получения макета в зависимости от версии поставки.
Функция ПолучитьМакетОбработкиСПроверкойВерсииПоставки(Знач ИмяМакета) Экспорт 
	
	Если Ванесса.Объект.ВерсияПоставки = "standart" Тогда
		ИмяМакета = ИмяМакета;
	Иначе	
		ИмяМакета = "МакетОбработки_ГенераторДанных_" + ИмяМакета;
	КонецЕсли;	   
	
	Возврат ПолучитьМакетСервер(ИмяМакета);
	
КонецФункции




///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Функция выполняется перед началом каждого сценария
Функция ПередНачаломСценария() Экспорт
	
КонецФункции

&НаКлиенте
// Функция выполняется перед окончанием каждого сценария
Функция ПередОкончаниемСценария() Экспорт
	
КонецФункции



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

#Область ГенерацияФамилий

&НаКлиенте
Функция ВыбратьФамилиюИзМакет(Знач Мужская = Истина)
	
	Генератор = Новый ГенераторСлучайныхЧисел();
	Если Мужская = Неопределено Тогда
		КолонкаФамилий	= Генератор.СлучайноеЧисло(1,2);
	Иначе	
		КолонкаФамилий	= ?(Мужская,1,2);            
	КонецЕсли;	                                
	
	МакетФамилий 		= ПолучитьМакетОбработкиСПроверкойВерсииПоставки("Фамилия");
	
	КоличествоФамилий 	= МакетФамилий.ВысотаТаблицы;
	НомерСтроки 	  	= Генератор.СлучайноеЧисло(1, КоличествоФамилий);
	
	ЯчейкаФамилии 		= МакетФамилий.Область(НомерСтроки, КолонкаФамилий, НомерСтроки, КолонкаФамилий);

	Возврат ЯчейкаФамилии.Текст;
КонецФункции


&НаКлиенте
//И я запоминаю случайную фамилию в переменную "ИмяПеременной"
//@ЯЗапоминаюСлучайнуюФамилиюВПеременную(Парам01)
Функция ЯЗапоминаюСлучайнуюФамилиюВПеременную(ИмяПеременной) Экспорт
	
	Ванесса.СохранитьЗначениеПеременнойВКонтекст(ИмяПеременной, ВыбратьФамилиюИзМакет(Неопределено));
		
КонецФункции 

&НаКлиенте
//И я запоминаю случайную мужскую фамилию в переменную "ИмяПеременной"
//@ЯЗапоминаюСлучайнуюМужскуюФамилиюВПеременную(Парам01)
Функция ЯЗапоминаюСлучайнуюМужскуюФамилиюВПеременную(ИмяПеременной) Экспорт
	
	Ванесса.СохранитьЗначениеПеременнойВКонтекст(ИмяПеременной, ВыбратьФамилиюИзМакет(Истина));
		
КонецФункции 

&НаКлиенте
//И я запоминаю случайную женскую фамилию в переменную "ИмяПеременной"
//@ЯЗапоминаюСлучайнуюЖенскуюФамилиюВПеременную(Парам01)
Функция ЯЗапоминаюСлучайнуюЖенскуюФамилиюВПеременную(ИмяПеременной) Экспорт
	
	Ванесса.СохранитьЗначениеПеременнойВКонтекст(ИмяПеременной, ВыбратьФамилиюИзМакет(Ложь));
		
КонецФункции 

#КонецОбласти

#Область ГенерацияИмен

&НаКлиенте
Функция ВыбратьИмяИзМакет(Знач Мужское = Истина)
	
	Генератор = Новый ГенераторСлучайныхЧисел();
	Если Мужское = Неопределено Тогда
		КолонкаИмен	= Генератор.СлучайноеЧисло(1,2);
	Иначе	
		КолонкаИмен	= ?(Мужское,1,2);            
	КонецЕсли;	                                
	
	МакетФамилий 		= ПолучитьМакетОбработкиСПроверкойВерсииПоставки("Имя");
	
	КоличествоФамилий 	= МакетФамилий.ВысотаТаблицы;
	НомерСтроки 	  	= Генератор.СлучайноеЧисло(1, КоличествоФамилий);
	
	ЯчейкаФамилии 		= МакетФамилий.Область(НомерСтроки, КолонкаИмен, НомерСтроки, КолонкаИмен);

	Возврат ЯчейкаФамилии.Текст;
КонецФункции

&НаКлиенте
//И я запоминаю случайное имя в переменную "ИмяПеременной"
//@ЯЗапоминаюСлучайноеИмяВПеременную(Парам01)
Функция ЯЗапоминаюСлучайноеИмяВПеременную(ИмяПеременной) Экспорт
	
	Ванесса.СохранитьЗначениеПеременнойВКонтекст(ИмяПеременной, ВыбратьИмяИзМакет(Неопределено));
		
КонецФункции        

&НаКлиенте
//И я запоминаю случайное мужское имя в переменную "ИмяПеременной"
//@ЯЗапоминаюСлучайноеМужскоеИмяВПеременную(Парам01)
Функция ЯЗапоминаюСлучайноеМужскоеИмяВПеременную(ИмяПеременной) Экспорт
	
	Ванесса.СохранитьЗначениеПеременнойВКонтекст(ИмяПеременной, ВыбратьИмяИзМакет(Истина));
		
КонецФункции
	
&НаКлиенте
//И я запоминаю случайное женское имя в переменную "ИмяПеременной"
//@ЯЗапоминаюСлучайноеЖенскоеИмяВПеременную(Парам01)
Функция ЯЗапоминаюСлучайноеЖенскоеИмяВПеременную(ИмяПеременной) Экспорт
	
	Ванесса.СохранитьЗначениеПеременнойВКонтекст(ИмяПеременной, ВыбратьИмяИзМакет(Ложь));
		
КонецФункции

#КонецОбласти

#Область ГенерацияИНН_КПП
&НаКлиенте
Функция НовыйИНН(НазначениеИНН)
		
	Если СтрСравнить(НазначениеИНН, "ЮридическоеЛицо") = 0 Тогда
		
		ЦифрыИНН = КоллекцияСлучайныхЦифр(9);
		
		ВесовыеКоэффициенты = ВесовыеКоэффициенты(НазначениеИНН);
				
		КонтрольноеЧисло = КонтрольноеЧисло(ЦифрыИНН, ВесовыеКоэффициенты, 11);
		
		Если КонтрольноеЧисло > 9 Тогда
			КонтрольноеЧисло = КонтрольноеЧисло % 10;
		КонецЕсли;
				
		ЦифрыИНН.Добавить(КонтрольноеЧисло);
		
		Результат = МассивЦифрСтрокой(ЦифрыИНН);
				
	ИначеЕсли СтрСравнить(НазначениеИНН, "ФизическоеЛицо") = 0 Тогда
		
		ЦифрыИНН = КоллекцияСлучайныхЦифр(10);
		
		ВесовыеКоэффициенты = ВесовыеКоэффициенты(НазначениеИНН);
						
		КонтрольноеЧисло = КонтрольноеЧисло(ЦифрыИНН, ВесовыеКоэффициенты, 11);
		
		Если КонтрольноеЧисло > 9 Тогда
			КонтрольноеЧисло = КонтрольноеЧисло % 10;
		КонецЕсли;
		
		ЦифрыИНН.Добавить(КонтрольноеЧисло);
		
		ВесовыеКоэффициенты = ВесовыеКоэффициенты(НазначениеИНН, Истина);
		
		КонтрольноеЧисло = КонтрольноеЧисло(ЦифрыИНН, ВесовыеКоэффициенты, 11);
		
		Если КонтрольноеЧисло > 9 Тогда
			КонтрольноеЧисло = КонтрольноеЧисло % 10;
		КонецЕсли;
		
		ЦифрыИНН.Добавить(КонтрольноеЧисло);
		
		Результат = МассивЦифрСтрокой(ЦифрыИНН);
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Передано некорректное назначение ИНН'");	
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция МассивЦифрСтрокой(Цифры)
	
	Для Счетчик = 0 По Цифры.ВГраница() Цикл
		Цифры[Счетчик] = Строка(Цифры[Счетчик]);
	КонецЦикла;
	
	Результат = СтрСоединить(Цифры);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ВесовыеКоэффициенты(Назначене, РасширенныйСписок = Ложь)
	
	Результат = Новый Массив;
	
	Если Назначене = "ЮридическоеЛицо" Тогда
		
		Результат.Добавить(2);
		Результат.Добавить(4);
		Результат.Добавить(10);
		Результат.Добавить(3);
		Результат.Добавить(5);
		Результат.Добавить(9);
		Результат.Добавить(4);
		Результат.Добавить(6);
		Результат.Добавить(8);
		
	ИначеЕсли Назначене = "ФизическоеЛицо" Тогда	
		
		Если РасширенныйСписок Тогда
			Результат.Добавить(3);
		КонецЕсли;
		
		Результат.Добавить(7);
		Результат.Добавить(2);
		Результат.Добавить(4);
		Результат.Добавить(10);
		Результат.Добавить(3);
		Результат.Добавить(5);
		Результат.Добавить(9);
		Результат.Добавить(4);
		Результат.Добавить(6);
		Результат.Добавить(8);
				
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция КоллекцияСлучайныхЦифр(КоличествоЦифр)
	
	ГенераторСлучайныхЧисел = Новый ГенераторСлучайныхЧисел(ТекущаяУНиверсальнаяДатаВМиллисекундах());
	
	Результат = Новый Массив;
	
	Для Счетчик = 1 По КоличествоЦифр Цикл
		
		НачальноеЧисло = ?(Счетчик = 1, 1, 0);
		
		Результат.Добавить(ГенераторСлучайныхЧисел.СлучайноеЧисло(НачальноеЧисло, 9));
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция КонтрольноеЧисло(ЦифрыИНН, ВесовыеКоэффициенты, Делитель)
	
	СуммаЧисел = 0;
	
	Для Счетчик = 0 По ВесовыеКоэффициенты.ВГраница() Цикл
		
		ЦифраИНН           = ЦифрыИНН[Счетчик];
		ВесовойКоэффициент = ВесовыеКоэффициенты[Счетчик];
		
		СуммаЧисел = СуммаЧисел + ЦифраИНН * ВесовойКоэффициент;
		
	КонецЦикла;
			
	Результат = СуммаЧисел % Делитель;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция НовыйКПП()
	
	ЦифрыИНН = КоллекцияСлучайныхЦифр(9);
	
	Результат = МассивЦифрСтрокой(ЦифрыИНН);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
//И я запоминаю случайный ИНН физического лица в переменную "ИмяПеременной"
//@ЯЗапоминаюСлучайныйИННФизическогоЛицаВПеременную(Парам01)
Функция ЯЗапоминаюСлучайныйИННФизическогоЛицаВПеременную(ИмяПеременной) Экспорт
	
	Значение = НовыйИНН("ФизическоеЛицо");
	
	Ванесса.СохранитьЗначениеПеременнойВКонтекст(ИмяПеременной, Значение);
		
КонецФункции 

&НаКлиенте
//И я запоминаю случайный ИНН юридического лица в переменную "ИмяПеременной"
//@ЯЗапоминаюСлучайныйИННЮридическогоЛицаВПеременную(Парам01)
Функция ЯЗапоминаюСлучайныйИННЮридическогоЛицаВПеременную(ИмяПеременной) Экспорт
	
	Значение = НовыйИНН("ЮридическоеЛицо");
	
	Ванесса.СохранитьЗначениеПеременнойВКонтекст(ИмяПеременной, Значение);
		
КонецФункции 

&НаКлиенте
//И я запоминаю случайный КПП юридического лица в переменную "ИмяПеременной"
//@ЯЗапоминаюСлучайныйКППЮридическогоЛицаВПеременную(Парам01)
Функция ЯЗапоминаюСлучайныйКППЮридическогоЛицаВПеременную(ИмяПеременной) Экспорт
	
	Значение = НовыйКПП();
	
	Ванесса.СохранитьЗначениеПеременнойВКонтекст(ИмяПеременной, Значение);
		
КонецФункции 

#КонецОбласти

#Область ГенерацияСНИЛС

&НаКлиенте
Функция КонтрольноеЧислоСНИЛС(СНИЛС)
	
	СНИЛСЦифры 				= СтрЗаменить(СНИЛС,"-","");
	СНИЛСЦифры 				= СтрЗаменить(СНИЛСЦифры," ","");
	КонтрольноеЧислоСНИЛС 	= Прав(СНИЛСЦифры,2);
	ПроверяемоеЧислоСНИЛС 	= Лев(СНИЛСЦифры,9);
	
	Сумма = 0;
	Для Счетчик = 1 По СтрДлина( ПроверяемоеЧислоСНИЛС) Цикл
		Цифра = Число( Сред( ПроверяемоеЧислоСНИЛС, Счетчик, 1));
		Сумма = Сумма + Цифра * ( СтрДлина(  ПроверяемоеЧислоСНИЛС) - Счетчик + 1);
	КонецЦикла;
	
	Если Сумма < 100 Тогда
		КонтрольнаяСумма = Сумма;
	ИначеЕсли Сумма = 100 ИЛИ Сумма = 101 Тогда
		КонтрольнаяСумма = 0;
	Иначе
		Сумма = Сумма % 101;
		
		Если (Сумма < 100) Тогда
			КонтрольнаяСумма = Сумма;
		Иначе
			КонтрольнаяСумма = 0;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КонтрольнаяСумма;
		
КонецФункции

&НаКлиенте
//И я запоминаю случайный СНИЛС в переменную "ИмяПеременной"
//@ЯЗапоминаюСлучайныйСНИЛСВПеременную(Парам01)
Функция ЯЗапоминаюСлучайныйСНИЛСВПеременную(ИмяПеременной) Экспорт
	
	Генератор = Новый ГенераторСлучайныхЧисел();                         
	СНИЛС = "";
	
	// СНИЛС имеет вид "XXX-XXX-XXX YY", где XXX-XXX-XXX - номер, а YY - контрольное число.
	СНИЛС = СНИЛС + "9"; // начнем СНИЛС с цифры 9, так как проверка контрольного числа проводится только для номеров больше номера 001-001-998 и снилсов с 9 не выдавали пока.
	Для Н=2 По 3 Цикл
		СНИЛС = СНИЛС + Строка(Генератор.СлучайноеЧисло(0,9));
	КонецЦикла;	
	СНИЛС = СНИЛС + "-";
	Для Н=1 По 3 Цикл
		СНИЛС = СНИЛС + Строка(Генератор.СлучайноеЧисло(0,9));
	КонецЦикла;	
	СНИЛС = СНИЛС + "-";
	Для Н=1 По 3 Цикл
		СНИЛС = СНИЛС + Строка(Генератор.СлучайноеЧисло(0,9));
	КонецЦикла;	
	СНИЛС = СНИЛС + " ";
	Для Н=1 По 2 Цикл
		СНИЛС = СНИЛС + Строка(Генератор.СлучайноеЧисло(0,9));
	КонецЦикла;	

    СНИЛС = Лев(СНИЛС,12) + КонтрольноеЧислоСНИЛС(СНИЛС);
	
	Ванесса.СохранитьЗначениеПеременнойВКонтекст(ИмяПеременной, СНИЛС);
		
КонецФункции 

#КонецОбласти  

#Область ГенерацияТелефона 

&НаКлиенте
//И я запоминаю случайный номер телефона в переменную  "ИмяПеременной"
//@ЯЗапоминаюСлучайныйНомерТелефонаВПеременную(Парам01)
Функция ЯЗапоминаюСлучайныйНомерТелефонаВПеременную(ИмяПеременной) Экспорт
	
	Генератор = Новый ГенераторСлучайныхЧисел();                         
	Телефон = "+7(000)";
	Для Н=1 По 3 Цикл
		Телефон = Телефон + Строка(Генератор.СлучайноеЧисло(0,9));
	КонецЦикла;	
	Телефон = Телефон + "-";
	Для Н=1 По 2 Цикл
		Телефон = Телефон + Строка(Генератор.СлучайноеЧисло(0,9));
	КонецЦикла;	
	Телефон = Телефон + "-";
	Для Н=1 По 2 Цикл
		Телефон = Телефон + Строка(Генератор.СлучайноеЧисло(0,9));
	КонецЦикла;	
	
	Ванесса.СохранитьЗначениеПеременнойВКонтекст(ИмяПеременной, Телефон);
		
КонецФункции 

#КонецОбласти  

#Область ГенерацияНоменклатуры

&НаКлиенте
//И я запоминаю случайное наименование номенклатуры в переменную "ИмяПеременной"
//@ЯЗапоминаюСлучайноеНаименованиеНоменклатурыВПеременную(Парам01)
Функция ЯЗапоминаюСлучайноеНаименованиеНоменклатурыВПеременную(ИмяПеременной) Экспорт
	
	Генератор = Новый ГенераторСлучайныхЧисел();
	
	МакетТНВЭД 		= ПолучитьМакетОбработкиСПроверкойВерсииПоставки("Номенклатура");
	
	КоличествоНаименований 	= МакетТНВЭД.ВысотаТаблицы;
	НомерСтроки 	  		= Генератор.СлучайноеЧисло(1, КоличествоНаименований);
	
	ЯчейкаНаименования 		= МакетТНВЭД.Область(НомерСтроки, 1, НомерСтроки, 1);

	Ванесса.СохранитьЗначениеПеременнойВКонтекст(ИмяПеременной, ЯчейкаНаименования.Текст);
		
КонецФункции 

#КонецОбласти     

#Область ГенерацияДатыРождения

&НаКлиенте
//И я запоминаю случайную дату рождения в переменную "ИмяПеременной"
//@ЯЗапоминаюСлучайнуюДатуРожденияВПеременную(Парам01)
Функция ЯЗапоминаюСлучайнуюДатуРожденияВПеременную(ИмяПеременной) Экспорт
	
	Генератор = Новый ГенераторСлучайныхЧисел();
	
	ДатаРождения = ТекущаяДата() - Генератор.СлучайноеЧисло(1,365*90)*86400; //Не более 90 лет
	ДатаРожденияСтрокой = Формат(ДатаРождения,"ДФ=dd.MM.yyyy");
	
	Ванесса.СохранитьЗначениеПеременнойВКонтекст(ИмяПеременной, ДатаРожденияСтрокой);
		
КонецФункции 

#КонецОбласти 
